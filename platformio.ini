; PlatformIO Project Configuration File
;
;   Build options: build flags, source filter
;   Upload options: custom upload port, speed and extra flags
;   Library options: dependencies, extra library storages
;   Advanced options: extra scripting
;
; Please visit documentation for the other options and examples
; https://docs.platformio.org/page/projectconf.html

; Show computed configuration: CTRL+SHIFT+P > PlatformIO: New Terminal
; > pio project config

[platformio]
default_envs = HeltecLoraV2ESP32
name = iohcLoRa32help

description = io-homecontrol for the ESP32
data_dir = ./extras

[common]
framework = arduino
;data_dir = ./data
board_build.filesystem = littlefs
lib_deps_builtin = SPIeX
lib_deps_external =
;	WiFiManager=https://github.com/mostorer/WiFiManager.git#feature_asyncwebserver ;it works also for ESP32
build_flags =
;	-DCONFIG_FREERTOS_HZ=1000
;	-DCONFIG_ESP_WIFI_TASK_PINNED_TO_CORE_0=no
	-DCONFIG_ESP_WIFI_TASK_PINNED_TO_CORE_1=y
	-DCONFIG_ESP_TIMER_PROFILING=y
	-DCONFIG_ESP_TIMER_SUPPORTS_ISR_DISPATCH_METHOD=y ; To see if it work with MQTT and WIFI. Can set callback in IRAM
;	-DCONFIG_ESP_TIMER_TASK_AFFINITY=0x0
;	-DCONFIG_ESP_TIMER_TASK_AFFINITY_CPU0=no
;	-DCONFIG_ESP_TIMER_ISR_AFFINITY=0x1
;	-DCONFIG_ESP_TIMER_ISR_AFFINITY_CPU0=y
;	-DCONFIG_COMPILER_OPTIMIZATION_ASSERTION_LEVEL=Silent
	-DCONFIG_COMPILER_OPTIMIZATION_PERF=y
;	-DCONFIG_FREERTOS_GENERATE_RUN_TIME_STATS=y
	-I include
	-std=gnu++2a 			;gnu++17; required to set >gnu++17 (or higher), for map lib to use "insert_or_assign()"
	-O3

extra_scripts =

; Global data for all [env:***]
[env]
framework = ${common.framework}
platform = espressif32 ;@^6.4.0
platform_packages = platformio/framework-arduinoespressif32 ;@^3.20011.230801
board_build.filesystem = ${common.board_build.filesystem}

; --- MONITOR/DEBUG SETTINGS ---
check_tool = cppcheck, clangtidy
check_skip_packages = yes
;prefer to check build without automatic upload
;targets = upload, monitor

lib_ldf_mode = deep
lib_deps =
	${common.lib_deps_builtin}
;	${common.lib_deps_external}
	bblanchon/ArduinoJson@^6.21.0
;	https://github.com/me-no-dev/ESPAsyncWebServer.git
;	luc-github/ESP32SSDP@^1.2.1

;    WiFi
;    256dpi/MQTT
;	https://github.com/X-Ryl669/esp-eMQTT5.git
;    mlesniew/PicoMQTT@^0.3.8
;	me-no-dev/AsyncTCP@^1.1.1
	https://github.com/HeMan/async-mqtt-client.git
;	marvinroger/AsyncMqttClient@^0.9.0

upload_protocol = esptool
upload_speed = 921600
monitor_speed = 115200
monitor_echo = true
monitor_filters = esp32_exception_decoder, send_on_enter, time, colorize

; Custom debug group can be use in [env:***] via ${debug.***}
[env:debug]
build_type = debug
; Set optimization level and amount of debug info generated by the compiler
debug_build_flags = -O0 -ggdb3 -g3

[extra]
build_flags =
;	!python git_rev_macro.py
	-DWM_MDNS

; [env:nodemcuv2]
; framework = ${common.framework}
; platform = espressif8266
; board_build.filesystem = ${common.board_build.filesystem}
; upload_speed = ${common.upload_speed}
; board = nodemcuv2
; build_flags = ${common.build_flags}
; 	-D PIO_FRAMEWORK_ARDUINO_ESPRESSIF_SDK305
; 	${extra.build_flags}
; 	-D FIRMWARE_VARIANT=nodemcuv2
; 	-I include
; extra_scripts = ${common.extra_scripts}
; lib_deps =
; 	${common.lib_deps_builtin}
; 	${common.lib_deps_external}
; 	ArduinoJson
; 	https://github.com/mostorer/ESPAsyncWebServer
; 	rweather/Crypto@^0.4.0
; monitor_speed = 460800
; upload_protocol = ${common.upload_protocol}
; upload_resetmethod = nodemcu
; board_build.flash_mode = qio
; monitor_filters = esp8266_exception_decoder

; [env:esp32dev]
; framework = ${common.framework}
; platform = espressif32
; platform_packages = platformio/framework-arduinoespressif32@^3.20011.230801
; board_build.filesystem = ${common.board_build.filesystem}
; board = esp32dev
; build_unflags = -std=gnu++11			; required to unset gnu++11, for map lib to use "insert_or_assign()"
; build_flags = ${common.build_flags}
; 	${extra.build_flags}
; 	-D FIRMWARE_VARIANT=esp32dev // Warning! Arduino framework as an ESP-IDF component doesn't handle the `variant` field! The default `esp32` variant will be used.
; 	-I include
; 	-std=gnu++17						; required to set gnu++17 (or higher), for map lib to use "insert_or_assign()"
; extra_scripts = ${common.extra_scripts}
; lib_deps =
; 	${common.lib_deps_builtin}
; 	${common.lib_deps_external}
; 	bblanchon/ArduinoJson@^6.21.0
; 	https://github.com/me-no-dev/ESPAsyncWebServer.git
; 	luc-github/ESP32SSDP@^1.2.1
; monitor_speed = 460800
; monitor_filters = esp32_exception_decoder, send_on_enter

[env:HeltecLoraV2ESP32]

board = heltec_wifi_lora_32_V2
build_unflags =
	-std=gnu++11			; required to unset gnu++11, for map lib to use "insert_or_assign()"
	-Os
build_flags =
	-DHELTEC
	${common.build_flags}
	${extra.build_flags}

#extra_scripts = ${common.extra_scripts}


[env:LilyGoLoraESP32]
board = ttgo-lora32-v21
build_unflags =
	-std=gnu++11			; required to unset gnu++11, for map lib to use "insert_or_assign()"
	-Os
build_flags =
	-DLILYGO
	${common.build_flags}
	${extra.build_flags}

#extra_scripts = ${common.extra_scripts}
